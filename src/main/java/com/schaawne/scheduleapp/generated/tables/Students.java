/**
 * This class is generated by jOOQ
 */
package com.schaawne.scheduleapp.generated.tables;


import com.schaawne.scheduleapp.generated.Keys;
import com.schaawne.scheduleapp.generated.Public;
import com.schaawne.scheduleapp.generated.tables.records.StudentsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Students extends TableImpl<StudentsRecord> {

    private static final long serialVersionUID = -363649607;

    /**
     * The reference instance of <code>PUBLIC.STUDENTS</code>
     */
    public static final Students STUDENTS = new Students();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentsRecord> getRecordType() {
        return StudentsRecord.class;
    }

    /**
     * The column <code>PUBLIC.STUDENTS.ID</code>.
     */
    public final TableField<StudentsRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_18623079_5906_42F4_8987_6B9E32178868)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>PUBLIC.STUDENTS.FIRSTNAME</code>.
     */
    public final TableField<StudentsRecord, String> FIRSTNAME = createField("FIRSTNAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.STUDENTS.LASTNAME</code>.
     */
    public final TableField<StudentsRecord, String> LASTNAME = createField("LASTNAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.STUDENTS.PHONENUMBER</code>.
     */
    public final TableField<StudentsRecord, String> PHONENUMBER = createField("PHONENUMBER", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>PUBLIC.STUDENTS.EMAIL</code>.
     */
    public final TableField<StudentsRecord, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>PUBLIC.STUDENTS</code> table reference
     */
    public Students() {
        this("STUDENTS", null);
    }

    /**
     * Create an aliased <code>PUBLIC.STUDENTS</code> table reference
     */
    public Students(String alias) {
        this(alias, STUDENTS);
    }

    private Students(String alias, Table<StudentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Students(String alias, Table<StudentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STUDENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_9;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentsRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentsRecord>>asList(Keys.CONSTRAINT_9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Students as(String alias) {
        return new Students(alias, this);
    }

    /**
     * Rename this table
     */
    public Students rename(String name) {
        return new Students(name, null);
    }
}
